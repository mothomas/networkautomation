---
- name: Setup | Create a temp dir for git
  ansible.builtin.tempfile:
    state: directory
    suffix: build
  register: git_temp_dir
- name: Setup | setup git backup repo url
  ansible.builtin.set_fact:
    git_backuprepo_url: https://{{ git_user_name }}:{{ git_token }}@{{ git_url }}/{{
      git_repo_name }}.git
- name: Clone down the backup repo
  ansible.builtin.git:
    repo: "{{ git_backuprepo_url }}"
    dest: "{{ git_temp_dir.path }}/git"
    clone: true
    version: main
- name: Baremetal | Git set user and token
  ansible.builtin.shell: |
    git config user.email "{{ git_user_email }}"
    git config user.name "{{ git_user_name }}"
    git config --global credential.helper store
    git config --global credential.helper 'cache --timeout=300'
    git config --global github.user "{{ git_user_name }}"
    git config --global github.token "{{ git_token }}"
  args:
    chdir: "{{ git_temp_dir.path }}/git"
- name: Create time stamp for play
  ansible.builtin.set_fact:
    datetime: "{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M') }}"
- name: Synchronize /backup to {{ git_temp_dir.path }}/git
  ansible.builtin.shell: >
    /usr/bin/rsync --delay-updates -F --delete-after
    --archive --compress --exclude=.git --out-format='<<CHANGED>>%i %n%L'
    /backup/ {{ git_temp_dir.path }}/git/
  when: on_demand is not defined
- name: Synchronize /backup to {{ git_temp_dir.path }}/git
  ansible.builtin.shell: >
    /usr/bin/rsync --delay-updates -F  --archive --compress
    --exclude=.git --out-format='<<CHANGED>>%i %n%L' /backup/ {{
    git_temp_dir.path }}/git/
  when: on_demand is defined
- name: Upload | Git add the new cluster and inventory artefact
  ansible.builtin.shell: |
    pwd && ls -lRh
    git add .
  args:
    chdir: "{{ git_temp_dir.path }}/git"
    
- name: Upload | Git commit thelatest backup
  ansible.builtin.shell: |
    git commit -m "Backup on: {{ datetime }} AAP JOB: {{ tower_job_id }}"
  args:
    chdir: "{{ git_temp_dir.path }}/git"
    
- name: Upload | git push the backup to main
  ansible.builtin.shell: git push --force
  args:
    chdir: "{{ git_temp_dir.path }}/git"
    
- name: Checkout to a new branch
  ansible.builtin.command:
    cmd: git checkout -b  {{ datetime }}
    chdir: "{{ git_temp_dir.path }}/git"
  when: on_demand is not defined
  
- name: Add files to latest backup
  ansible.builtin.command:
    cmd: git add .
    chdir: "{{ git_temp_dir.path }}/git"
  when: on_demand is not defined
  
- name: Upload | git push the backup to main
  ansible.builtin.shell: git push  origin {{ datetime }} --force
  args:
    chdir: "{{ git_temp_dir.path }}/git"
  when: on_demand is not defined
